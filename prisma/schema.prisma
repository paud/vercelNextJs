generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  email         String      @unique
  name          String?
  password      String?     @default("temp123")
  phone         String?
  username      String?     @unique
  createdAt     DateTime    @default(now())
  emailVerified DateTime?
  image         String?
  updatedAt     DateTime    @updatedAt
  cityId        Int?
  districtId    Int?
  prefectureId  Int?
  region        String?     @default("kansai")
  regionId      Int?
  wardId        Int?
  id            Int         @id @default(autoincrement())
  accounts      Account[]
  item          Item[]
  sessions      Session[]
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  City          City?       @relation(fields: [cityId], references: [id])
  District      District?   @relation(fields: [districtId], references: [id])
  Prefecture    Prefecture? @relation(fields: [prefectureId], references: [id])
  Region        Region?     @relation(fields: [regionId], references: [id])
  Ward          Ward?       @relation(fields: [wardId], references: [id])
  systemNotifications SystemNotification[]

  @@index([regionId])
  @@index([cityId])
  @@index([districtId])
  @@index([prefectureId])
  @@index([wardId])
}

model Item {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  title        String
  description  String?
  price        Float
  imageUrl     String?
  cityId       Int?
  districtId   Int?
  prefectureId Int?
  region       String?     @default("kansai")
  regionId     Int?
  wardId       Int?
  sellerId     Int
  City         City?       @relation(fields: [cityId], references: [id])
  District     District?   @relation(fields: [districtId], references: [id])
  Prefecture   Prefecture? @relation(fields: [prefectureId], references: [id])
  Region       Region?     @relation(fields: [regionId], references: [id])
  seller       User        @relation(fields: [sellerId], references: [id])
  Ward         Ward?       @relation(fields: [wardId], references: [id])

  @@index([regionId])
  @@index([cityId])
  @@index([districtId])
  @@index([prefectureId])
  @@index([region])
  @@index([wardId])
}

model Account {
  id                String  @id @default(cuid())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  userId            Int
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model City {
  id           Int        @id @default(autoincrement())
  code         String     @unique
  nameJa       String
  nameEn       String
  nameZh       String
  type         String
  level        String
  prefectureId Int
  isCapital    Boolean    @default(false)
  population   Int?
  area         Float?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Prefecture   Prefecture @relation(fields: [prefectureId], references: [id])
  District     District[]
  Item         Item[]
  User         User[]
  Ward         Ward[]

  @@index([code])
  @@index([level])
  @@index([prefectureId])
  @@index([type])
}

model District {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  nameJa     String
  nameEn     String
  nameZh     String
  cityId     Int
  population Int?
  area       Float?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  City       City     @relation(fields: [cityId], references: [id])
  Item       Item[]
  User       User[]
  Ward       Ward[]

  @@index([cityId])
  @@index([code])
}

model Prefecture {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  nameJa     String
  nameEn     String
  nameZh     String
  regionId   Int
  type       String
  capital    String?
  postalCode String?
  area       Float?
  population Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  City       City[]
  Item       Item[]
  Region     Region   @relation(fields: [regionId], references: [id])
  User       User[]

  @@index([code])
  @@index([postalCode])
  @@index([regionId])
}

model Region {
  id          Int          @id @default(autoincrement())
  code        String       @unique
  nameJa      String
  nameEn      String
  nameZh      String
  description String?
  area        Float?
  population  Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Item        Item[]
  Prefecture  Prefecture[]
  User        User[]

  @@index([code])
}

model Ward {
  id         Int       @id @default(autoincrement())
  code       String?   @unique
  nameJa     String
  nameEn     String
  nameZh     String
  type       String
  cityId     Int?
  districtId Int?
  population Int?
  area       Float?
  postalCode String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Item       Item[]
  User       User[]
  City       City?     @relation(fields: [cityId], references: [id])
  District   District? @relation(fields: [districtId], references: [id])

  @@index([cityId])
  @@index([districtId])
}

model Message {
  id          Int      @id @default(autoincrement())
  senderId    Int
  receiverId  Int
  content     String
  createdAt   DateTime @default(now())
  read        Boolean  @default(false)
  readAt      DateTime?
  itemId      Int?
  itemTitle   String?
  imageUrl    String?

  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@index([senderId])
  @@index([receiverId])
  @@index([createdAt])
  @@index([itemId])
}

model SystemNotification {
  id        Int      @id @default(autoincrement())
  userId    Int?     // null 表示全员通知
  title     String
  content   String
  type      String?  // 可选：如 announcement, alert, etc.
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([read])
  @@index([createdAt])
}
