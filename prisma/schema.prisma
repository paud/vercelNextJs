generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String?   @unique
  email         String    @unique
  name          String?
  phone         String?
  password      String?   @default("temp123")
  image         String?   // 添加 NextAuth 需要的 image 字段
  emailVerified DateTime? // 添加 NextAuth 需要的 emailVerified 字段
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  item          Item[]
  accounts      Account[]
  sessions      Session[]
}



model Item {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  price       Float
  imageUrl    String?
  sellerId    Int      // Back to Int to match User.id
  seller      User     @relation(fields: [sellerId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
