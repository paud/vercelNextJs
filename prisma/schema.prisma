generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model User {
  email               String               @unique @db.VarChar(8192)
  name                String?              @db.VarChar(8192)
  password            String?              @default("temp123") @db.VarChar(8192)
  phone               String?              @db.VarChar(8192)
  username            String?              @unique @db.VarChar(8192)
  image               String?              @db.VarChar(8192)
  region              String?              @default("kansai") @db.VarChar(8192)
  createdAt           DateTime             @default(now())
  emailVerified       DateTime?
  updatedAt           DateTime             @updatedAt
  cityId              Int?
  districtId          Int?
  prefectureId        Int?
  regionId            Int?
  wardId              Int?
  id                  Int                  @id @default(autoincrement())
  accounts            Account[]
  comments            Comment[]
  item                Item[]
  receivedMessages    Message[]            @relation("ReceivedMessages")
  sentMessages        Message[]            @relation("SentMessages")
  sessions            Session[]
  systemNotifications SystemNotification[]
  City                City?                @relation(fields: [cityId], references: [id])
  District            District?            @relation(fields: [districtId], references: [id])
  Prefecture          Prefecture?          @relation(fields: [prefectureId], references: [id])
  Region              Region?              @relation(fields: [regionId], references: [id])
  Ward                Ward?                @relation(fields: [wardId], references: [id])

  @@index([regionId])
  @@index([cityId])
  @@index([districtId])
  @@index([prefectureId])
  @@index([wardId])
}

model Item {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  title        String      @db.VarChar(8192)
  description  String?     @db.VarChar(8192)
  price        Float
  imageUrl     String?     @db.VarChar(8192)
  region       String?     @default("kansai") @db.VarChar(8192)
  cityId       Int?
  districtId   Int?
  prefectureId Int?
  regionId     Int?
  wardId       Int?
  sellerId     Int
  comments     Comment[]
  City         City?       @relation(fields: [cityId], references: [id])
  District     District?   @relation(fields: [districtId], references: [id])
  Prefecture   Prefecture? @relation(fields: [prefectureId], references: [id])
  Region       Region?     @relation(fields: [regionId], references: [id])
  seller       User        @relation(fields: [sellerId], references: [id])
  Ward         Ward?       @relation(fields: [wardId], references: [id])

  @@index([regionId])
  @@index([cityId])
  @@index([districtId])
  @@index([prefectureId])
  @@index([region])
  @@index([wardId])
}

model Account {
  id                String  @id @default(cuid()) @db.VarChar(8192)
  type              String  @db.VarChar(8192)
  provider          String  @db.VarChar(8192)
  providerAccountId String  @db.VarChar(8192)
  refresh_token     String? @db.VarChar(8192)
  access_token      String? @db.VarChar(8192)
  expires_at        Int?
  token_type        String? @db.VarChar(8192)
  scope             String? @db.VarChar(8192)
  id_token          String? @db.VarChar(8192)
  session_state     String? @db.VarChar(8192)
  userId            Int
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @db.VarChar(8192)
  sessionToken String   @unique @db.VarChar(8192)
  expires      DateTime
  userId       Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String   @db.VarChar(8192)
  token      String   @unique @db.VarChar(8192)
  expires    DateTime

  @@unique([identifier, token])
}

model City {
  id           Int        @id @default(autoincrement())
  code         String     @unique @db.VarChar(8192)
  nameJa       String     @db.VarChar(8192)
  nameEn       String     @db.VarChar(8192)
  nameZh       String     @db.VarChar(8192)
  type         String     @db.VarChar(8192)
  level        String     @db.VarChar(8192)
  prefectureId Int
  isCapital    Boolean    @default(false)
  population   Int?
  area         Float?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Prefecture   Prefecture @relation(fields: [prefectureId], references: [id])
  District     District[]
  Item         Item[]
  User         User[]
  Ward         Ward[]

  @@index([code])
  @@index([level])
  @@index([prefectureId])
  @@index([type])
}

model District {
  id         Int      @id @default(autoincrement())
  code       String   @unique @db.VarChar(8192)
  nameJa     String   @db.VarChar(8192)
  nameEn     String   @db.VarChar(8192)
  nameZh     String   @db.VarChar(8192)
  cityId     Int
  population Int?
  area       Float?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  postalCode String?  @db.VarChar(8192)
  City       City     @relation(fields: [cityId], references: [id])
  Item       Item[]
  User       User[]
  Ward       Ward[]

  @@index([cityId])
  @@index([code])
}

model Prefecture {
  id         Int      @id @default(autoincrement())
  code       String   @unique @db.VarChar(8192)
  nameJa     String   @db.VarChar(8192)
  nameEn     String   @db.VarChar(8192)
  nameZh     String   @db.VarChar(8192)
  regionId   Int
  type       String   @db.VarChar(8192)
  capital    String?  @db.VarChar(8192)
  postalCode String?  @db.VarChar(8192)
  area       Float?
  population Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  City       City[]
  Item       Item[]
  Region     Region   @relation(fields: [regionId], references: [id])
  User       User[]

  @@index([code])
  @@index([postalCode])
  @@index([regionId])
}

model Region {
  id          Int          @id @default(autoincrement())
  code        String       @unique @db.VarChar(8192)
  nameJa      String       @db.VarChar(8192)
  nameEn      String       @db.VarChar(8192)
  nameZh      String       @db.VarChar(8192)
  description String?      @db.VarChar(8192)
  area        Float?
  population  Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Item        Item[]
  Prefecture  Prefecture[]
  User        User[]

  @@index([code])
}

model Ward {
  id         Int       @id @default(autoincrement())
  code       String?   @unique @db.VarChar(8192)
  nameJa     String    @db.VarChar(8192)
  nameEn     String    @db.VarChar(8192)
  nameZh     String    @db.VarChar(8192)
  type       String    @db.VarChar(8192)
  cityId     Int?
  districtId Int?
  population Int?
  area       Float?
  postalCode String?   @db.VarChar(8192)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Item       Item[]
  User       User[]
  City       City?     @relation(fields: [cityId], references: [id])
  District   District? @relation(fields: [districtId], references: [id])

  @@index([cityId])
  @@index([districtId])
}

model Message {
  id         Int       @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String    @db.VarChar(8192)
  createdAt  DateTime  @default(now())
  read       Boolean   @default(false)
  readAt     DateTime?
  itemId     Int?
  itemTitle  String?   @db.VarChar(8192)
  imageUrl   String?   @db.VarChar(8192)
  receiver   User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User      @relation("SentMessages", fields: [senderId], references: [id])

  @@index([senderId])
  @@index([receiverId])
  @@index([createdAt])
  @@index([itemId])
}

model SystemNotification {
  id        Int      @id @default(autoincrement())
  userId    Int?
  title     String   @db.VarChar(8192)
  content   String   @db.VarChar(8192)
  type      String?  @db.VarChar(8192)
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([read])
  @@index([createdAt])
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String    @db.VarChar(8192)
  createdAt DateTime  @default(now())
  itemId    Int
  userId    Int?
  parentId  Int?
  item      Item      @relation(fields: [itemId], references: [id])
  parent    Comment?  @relation("CommentParent", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentParent")
  user      User?     @relation(fields: [userId], references: [id])
}
